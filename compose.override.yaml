# Development environment override
services:
  php:
    build:
      context: .
      target: frankenphp_dev
    volumes:
      - ./:/app
      - ./frankenphp/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./frankenphp/conf.d/20-app.dev.ini:/usr/local/etc/php/app.conf.d/20-app.dev.ini:ro
      - ./frankenphp/certs:/etc/caddy/certs:ro
      # If you develop on Mac or Windows you can remove the vendor/ directory
      #  from the bind-mount for better performance by enabling the next line:
      #- /app/vendor
      - ~/.ssh:/home/symfony/.ssh:ro
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:443
      FRANKENPHP_WORKER_CONFIG: watch
      MERCURE_EXTRA_DIRECTIVES: demo
      CADDY_SERVER_EXTRA_DIRECTIVES: ${CADDY_SERVER_EXTRA_DIRECTIVES:-tls /etc/caddy/certs/tls.pem /etc/caddy/certs/tls.key}
      CADDY_GLOBAL_OPTIONS: ${CADDY_GLOBAL_OPTIONS:-auto_https off}
      # See https://xdebug.org/docs/all_settings#mode
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
      APP_ENV: "${APP_ENV:-dev}"
    extra_hosts:
      # Ensure that host.docker.internal is correctly defined on Linux
      - host.docker.internal:host-gateway
    tty: true

###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  database:
    image: mysql:${MYSQL_VERSION:-8}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
      MYSQL_USER: ${MYSQL_USER:-app}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ./docker/setup.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./docker/db.data:/var/lib/mysql:rw
    ports:
      - "3392:3306"
###< doctrine/doctrine-bundle ###

###> symfony/mailer ###
  mailer:
    image: axllent/mailpit
    ports:
      - "1025"
      - "8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
###< symfony/mailer ###

  node:
    user: ${USER_ID-1000}:${GROUP_ID-1000}
    build:
      context: .
      dockerfile: Node.Dockerfile
    image: node:lts-alpine
    tty: true
    working_dir: /app
    ports:
      - "5173:5173"
    depends_on:
      - php
    volumes:
      - ./:/app
      - ~/.ssh:/home/node/.ssh:ro
    environment:
      NODE_ENV: development
      SERVER_NAME: ${SERVER_NAME:-localhost}
